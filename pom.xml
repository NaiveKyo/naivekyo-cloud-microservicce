<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.naivekyo</groupId>
    <artifactId>naivekyo-cloud-microservicce</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>infrastructure</module>
        <module>business-service</module>
    </modules>
    <packaging>pom</packaging>
    
    <developers>
        <developer>
            <name>NaiveKyo</name>
            <email>naivekyore@gmail.com</email>
            <roles>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>
    
    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <prject.build.sourceEncoding>UTF-8</prject.build.sourceEncoding>
        <spring.boot.version>2.7.10</spring.boot.version>
        <spring.cloud.version>2021.0.6</spring.cloud.version>
        <spring.cloud.alibaba.version>2021.1</spring.cloud.alibaba.version>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <!-- spring boot dependencies -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring cloud dependencies -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring cloud alibaba dependencies -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring.cloud.alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <finalName>${project.name}</finalName>
        <!-- 过滤 spring boot 配置文件目录, 为了解决 maven-resource-plugin 插件的 ${} 占位符语法和 Spring 默认的 ${} 插值语法冲突问题, 提供 @@ 占位符语法 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                    <executions>
                        <execution>
                            <!-- 配置 spring-boot 插件 goal -->
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <excludes>
                            <!-- 项目中直接使用自定义的 spring-boot-starter, 为了避免它们被 repackage, 可以增加如下配置 -->
                            <exclude>
                                <groupId>org.springframework.boot</groupId>
                                <artifactId>spring-boot-autoconfigure-processor</artifactId>
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>